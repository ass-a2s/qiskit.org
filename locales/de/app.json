{
  "tools": "Werkzeuge",
  "fun": "Spaß",
  "joinSlack": "Der Slack Community beitreten",
  "documentation": "Dokumentation",
  "tutorials": "Übungen",
  "pages": {
    "home": {
      "metaTitle": "Qiskit | Quantum Information Science Kit",
      "metaDescription": "Qiskit ist ein Open Source Software Development Kit (SDK) zum Arbeiten mit OpenQASM und dem IBM Q Quantenprozessor: erstelle Programme für den Quantencomputer, kompiliere, und führe sie online auf einem echten Quantenprozessor aus.",
      "headerTitle": "Qiskit",
      "headerSubTitle": "Ein Open Source Quantencomputing Framework zur Nutzung von heutigen Quantenprozessoren und zum Einsatz in der Wissenschaft, Ausbildung und im Unternehmen",
      "altLogo": "$t(pages.home.headerTitle) Logo",
      "newsQCampTitle": "Qiskit Camp ’19",
      "newsQCampDescription": "Der erste Community Event! Nehmt teil an einem umfassenden Trainingskurs in der IBM Research Zentrale mit tief gehenden, technischen Vorträgen verteilt über drei Tage von 26. Februar bis 1. März gefolgt von einem 24 Stunden Hackathon in einem Mountain Resort in Vermont.",
      "newsQCampButton": "Mehr Informationen",
      "newsVscodeTitle": "Einführung der VSCode Erweiterung!",
      "newsVscodeDescription": "$t(pages.vscode.headerSubTitle)",
      "newsVscodeButton": "Weitere Informationen",
      "newsVideoTitle": "Erste Schritte mit Qiskit",
      "newsVideoDescription": "In dieser Episode präsentiert uns Doug McClure, Qiskitter bei IBM, Qiskit und dessen Funktionen. Du wirst alles Notwendige lernen, um dein erstes Quantenprogramm auf echter IBM Q Hardware laufen lassen zu können.",
      "newsVideoButton": "Video ansehen",
      "tryTitle": "Qiskit ausprobieren",
      "tryDescription": "Verwende unser Binder Image um Qiskit ohne Installation ausprobieren zu können.",
      "tryButton": "Ausprobieren",
      "communityTitle": "Qiskit Community",
      "communityDescription": "Qiskit wird von unserer Community begeisterter Qiskitter vorangetrieben! Wir haben uns zum Ziel gesetzt, Quantencomputing Personen mit unterschiedlichem Hintergrund zu ermöglichen und freuen uns immer auf direktes Feedback von euch. Es gibt viele Möglichkeiten, auf dem neuesten Stand zu bleiben oder zu Qiskit beizutragen und mitzuwirken.",
      "ibmQExperienceTitle": "Was sind Quantenschaltungen?",
      "ibmQExperienceDescription": "Lerne die Grundlagen des Quantencomputings kennen und erstelle Quantenschaltungen grafisch mit der IBM Q Experience.",
      "ibmQExperienceButton": "Ausprobieren",
      "ibmQExperienceAltImage": "Screenshot des IBM Q Experience Composers",
      "supportingTitle": "Unterstützende Organisationen und Mitwirkende",
      "supportingDescription": "Unsere Qiskitter Community setzt sich aus verschiedenen, weit verteilten Organisationen zusammen. Wenn du ein Mitwirkender bist und aufgelistet werden möchtest, schreibe uns bitte eine E-Mail an qiskit@qiskit.org. Danke und frohes Entwickeln!",
      "citationTitle": "Zitat",
      "citationDescription": "Wenn Sie Qiskit verwenden, zitieren Sie es bitte gemäß der mitgelieferten ",
      "bibtexLink": "BibTeX-Datei"
    },
    "terra": {
      "metaTitle": "$t(pages.terra.headerTitle) | $t(pages.terra.headerSubTitle)",
      "metaDescription": "$t(pages.terra.headerSubTitle)",
      "headerTitle": "Qiskit Terra",
      "headerSubTitle": "Eine solide Basis für Quantencomputing",
      "altLogo": "$t(pages.terra.headerTitle) Logo",
      "aboutTitle": "Über",
      "aboutDescription": "Qiskit Terra liefert die grundlegenden Funktionen für unseren Software Stack. Terra enthält eine Sammlung an Werkzeugen zum Erstellen eines Quantenprogramms auf dem Level von Schaltungen und Pulsen, seiner Optimierung auf bestimmte Einschränkungen einzelner physikalischer Quantenprozessoren und zum Verwalten der Stapelverarbeitung der Experimente auf den Backends per Fernzugriff. Terra ist modular aufgebaut, um das Hinzufügen von Erweiterungen zur Schaltungsoptimierung und weiteren Backends zu erleichtern. Eure Beiträge sind willkommen!",
      "stackTitle": "Stack",
      "installTitle": "Installation",
      "pythonIsRequired": "Python >=3.5 wird benötigt",
      "exampleTitle": "Beispiel"
    },
    "aqua": {
      "metaTitle": "$t(pages.aqua.headerTitle) | $t(pages.aqua.headerSubTitle)",
      "metaDescription": "$t(pages.aqua.headerSubTitle)",
      "headerTitle": "Qiskit Aqua",
      "headerSubTitle": "Algorithmen für die nächsten Quantenapplikationen",
      "altLogo": "$t(pages.aqua.headerTitle) Logo",
      "aboutTitle": "Über",
      "aboutDescription": "Qiskit Aqua beinhaltet eine Bibliothek bereichsübergreifendern Quantenalgorithmen, aus denen Applikationen für Quantencomputing in naher Zukunft aufgebaut werden können. Aqua wurde erweiterbar entworfen und verwendet ein erweiterbares Framework, in dem Quantenalgorithmen leicht hinzugefügt werden können. Es erlaubt dem Anwender zur Zeit, mit Applikationen in Chemie, AI, Optimierung und Finanzwesen auf gegenwärtigen Quantencomputern zu experimentieren.",
      "stackTitle": "Stack",
      "installTitle": "Installation",
      "pythonIsRequired": "Python >=3.5 wird benötigt",
      "exampleTitle": "Beispiel",
      "chemistryTitle": "Qiskit Chemistry",
      "chemistryDescription": "Qiskit Chemistry ist der erste End-zu-End Softwarestack, der das Experimentieren mit Chemieproblemen auf aktuellen Quantencomputern erlaubt. Er übersetzt chemiespezifische Probleme, die durch klassische Treiber definiert werden, in Inputdaten für den Aqua Algorithmus. Er ist modular und ausbaubar aufgebaut und erlaubt Anwendern unterschiedlicher Ausbildungsstufen, chemische Experimente durchzuführen und im Bereich Quantencomputing in der Chemie zum Softwarestack beizutragen.",
      "chemistryLiHEnergyAltImage": "LiH Energie des Grundzustands",
      "chemistryLiHDipoleAltImage": "LiH Dipolmoment",
      "pyscfIsRequired": "PySCF wird benötigt",
      "chemistryGui": "GUI",
      "chemistryGuiDescription1": "Zusätzlich zum programmierbaren Interface verfügt Aqua als einziger Quantencomputing Softwarestack über eine GUI zur intuitiven Problemkonfiguration und Programmausführung. Die Aqua GUI erlaubt das Übermitteln der Inputdaten und die Ausführung eines Quantenalgorithmus. Die Qiskit Chemistry GUI ermöglicht dem Anwender die Konfiguration eines chemischen Experiments und den vielen notwendigen Komponenten, um das Experiment auf einer Quantenmaschine durchzuführen.",
      "chemistryGuiDescription2": "Die GUI stellt die Korrektheit der schemabasierten Konfigurationsparameter sicher, um mögliche Falscheingaben des Anwenders zu verhindern.",
      "chemistryGuiDescription3": "Aqua erlaubt des Weiteren einen deklarativen Programmieransatz. Sobald ein Problem mit Hilfe der GUI konfiguriert wurde, kann der Anwender die gesamte Konfiguration als Python Dictionary extrahieren und mit nur zwei Zeilen Code das gesamte Experiment programmatisch ausführen. Das Python Dictionary kann für weitere, aufwendigere Experimente auch programmatisch angepasst werden.",
      "chemistryGuiAltImage": "Qiskit Chemistry GUI"
    },
    "aer": {
      "metaTitle": "$t(pages.aer.headerTitle) | $t(pages.aer.headerSubTitle)",
      "metaDescription": "$t(pages.aer.headerSubTitle)",
      "headerTitle": "Qiskit Aer",
      "headerSubTitle": "Eine leistungsstarke Simulationsumgebung für Quantenschaltungen",
      "altLogo": "$t(pages.aer.headerTitle) logo",
      "aboutTitle": "Über",
      "aboutDescription": "Qiskit Aer liefert eine leistungsstarke Simulationsumgebung für den Qiskit Software Stack. Es enthält einen optimierten C++ Simulator als Backend zum Ausführen von in Qiskit Terra kompilierten Schaltungen sowie Werkzeuge zum Aufbau von hochgradig konfigurierbaren Rauschmodellen, die zur Simulation von realistischem Rauschen bei der Ausführung auf echten Geräten notwendig sind.",
      "stackTitle": "Stack",
      "installTitle": "Installation",
      "pythonIsRequired": "Python >=3.5 wird benötigt",
      "exampleTitle": "Beispiel"
    },
    "ignis": {
      "metaTitle": "$t(pages.ignis.headerTitle) | $t(pages.ignis.headerSubTitle)",
      "metaDescription": "$t(pages.ignis.headerSubTitle)",
      "headerTitle": "Qiskit Ignis",
      "headerSubTitle": "Rauschen in Quantengeräten verstehen und abschwächen.",
      "altLogo": "$t(pages.ignis.headerTitle) logo",
      "aboutTitle": "Über",
      "aboutDescription": "Qiskit Ignis ist ein Framework zum Verständnis und zur Verringerung von Rauschen in Quantenschaltkreisen und -geräten. Ignis bietet in sich geschlossene Experimente an, die Werkzeuge zur Erzeugung der Schaltkreise umfassen, die auf realen Backends über Terra (oder Simulatoren über Aer) ausgeführt werden können, und Werkzeuge zur Anpassung der Ergebnisse und zur Analyse der Daten. Die in Ignis bereitgestellten Experimente sind nach den Themen Charakterisierung, Verifizierung und Minderung gegliedert. Charakterisierungsexperimente wie T1 (Qubit-Lebensdauer) und T2 (Qubit-Dephasing) dienen zur Messung von Rauschparametern im System. Verifikationsexperimente wie randomisiertes Benchmarking und Tomographie sollen die Leistung von Gattern und kleinen Schaltkreisen überprüfen. Mitigationsexperimente führen Kalibrierungsschaltungen aus, die analysiert werden, um Abschwächungsroutinen zu generieren, die auf beliebige Sätze von Ergebnissen angewendet werden können, die im selben Backend ausgeführt werden.",
      "stackTitle": "Stack",
      "installTitle": "Installation",
      "pythonIsRequired": "Python >=3.5 wird benötigt",
      "exampleTitle": "Beispiel"
    },
    "vscode": {
      "metaTitle": "$t(pages.vscode.headerTitle) | $t(pages.vscode.headerSubTitle)",
      "metaDescription": "$t(pages.vscode.headerSubTitle)",
      "headerTitle": "Qiskit VSCode Erweiterung",
      "headerSubTitle": "Qiskit vereinfachen, um die Entwicklung von Quantenschaltkreisen und Applikationen zu beschleunigen",
      "altLogo": "$t(pages.vscode.headerTitle) Logo",
      "stepOneTitle": "Visual Studio Code installieren",
      "stepOneButton": "Download",
      "stepTwoTitle": "Qiskit VSCode Erweiterung installieren",
      "stepTwoButton": "Installieren",
      "autocompleteTitle": "Autovervollständigen",
      "autocompleteDescription": "Sich an die korrekten Befehle und Syntax für eine neue Code-Basis zu erinnern, kann für neue wie für erfahrene Entwickler schwierig sein. Die VSCode Erweiterung gibt unseren Anwendern Vorschläge über mögliche Code-Vervollständigungen, während sie Quantenschaltkreise und Applikationen entwickeln.",
      "documentationTitle": "Dokumentation",
      "documentationDescription": "Die VSCode Erweiterung liefert eine dynamische, kontextbezogene Dokumentation. Wenn man die Maus über Anweisungen im Programm führt, zeigt der Editor die anwenderspezifische Dokumentation bezogen auf den jeweiligen Qiskit Befehl an.",
      "linterTitle": "Linter",
      "linterDescription": "Die VSCode Erweiterung hat die eingebaute Fähigkeit, syntaktische oder semantische Fehler im Quelltext zu erkennen und entsprechende Korrekturen anzubieten.",
      "snippetsTitle": "Ausschnitte",
      "snippetsDescription": "Die selben Codezeilen wieder und wieder zu schreiben, kann mühsam sein; die VSCode Erweiterung liefert Code Ausschnitte für Qiskit, was das gleichzeitige Einfügen von mehreren Zeilen erleichtert. Die Ausschnitte sind in alle Teile von Qiskit integriert und helfen, den Workflow von Quantenentwicklern zu beschleunigen.",
      "integratedToolsTitle": "Integrierte Werkzeuge",
      "integratedToolsDescription": "Anwender können die Ausführungen ihrer Qiskit Programme vom VSCode Editor aus starten. Registrierte Anwender von IBM Q können auf die verfügbaren Geräte ditrekt über eine Integration aus dem Editor heraus zugreifen. Zusammen mit kontextbezogenen Informationen, wie Gerätestatus und Warteschlange der Ausführungen, erleichtert diese Integration die Arbeit für Quantenentwickler."
    },
    "fun": {
      "metaTitle": "$t(pages.fun.headerTitle) | $t(pages.fun.headerSubTitle)",
      "metaDescription": "$t(pages.fun.headerSubTitle)",
      "headerTitle": "Qiskit Spaß",
      "headerSubTitle": "Lustige Dinge zum Quantencomputing",
      "modelQTitle": "Model Q",
      "modelQDescription": "Nach langem Warten freut es uns, dass wir die Verfügbarkeit der portablen Model Q Quantentastatur ankündigen können: Der ultimative Begleiter für den ernsthaften Quantenprogrammierer.",
      "modelQButton": "Besuche Model Q",
      "modelQAltImage": "Model Q Hardware",
      "helloQuantumTitle": "Hello Quantum",
      "helloQuantumDescription": "Du denkst, Quantencomputing sei kompliziert? Entdecke die Bausteine der Quantenmechanik mit Rätseln.",
      "helloQuantumButton": "Besuche Hello Quantum",
      "helloQuantumAltImage": "Hello Quantum Logo",
      "entanglionTitle": "Entanglion",
      "entanglionDescription": "Das weltweit erste Open Source Quantenbrettspiel. Entdecke neue Galaxien bei der Herausforderung, einen Quantencomputer zu bauen!",
      "entanglionButton": "Besuche Entanglion",
      "entanglionAltImage": "Entanglion Titel"
    },
    "notFound": {
      "metaTitle": "Qiskit | nicht gefunden",
      "metaDescription": "",
      "headerTitle": "Es tut uns Leid, diese Seite existiert nicht!",
      "headerSubTitle": "Zurück zur Startseite"
    }
  }
}
